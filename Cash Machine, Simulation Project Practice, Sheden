{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyPE5UVU9AANcibFvPZDZYJA",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Shedennerayo/Project/blob/main/Cash%20Machine%2C%20Simulation%20Project%20Practice%2C%20Sheden\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "VL7Qq0PPiCYP"
      },
      "outputs": [],
      "source": [
        "#Atm Python Project"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Welcome Menu\n",
        "print(\"Paradox Corp Bank\")\n",
        "print(\"----------------\")\n",
        "print()\n",
        "print()\n",
        "pin= int(input(\"Please enter your 4 digit pin number\\n\\n\"))\n",
        "print()\n",
        "if pin==1234:\n",
        "  print(\"Welcome to Paradox\")\n",
        "else:\n",
        "    print(\"Try again please.\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "xmpeevyMijMx",
        "outputId": "a7ba19bd-03b9-495e-a841-01b7758808aa"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Paradox Corp Bank\n",
            "----------------\n",
            "\n",
            "\n",
            "Please enter your 4 digit pin number\n",
            "\n",
            "1234\n",
            "\n",
            "Welcome to Paradox\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Ask for Pin"
      ],
      "metadata": {
        "id": "0WFlOEyrimpl"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Options\n",
        "#Check balance\n",
        "#withdrawals\n",
        "#Deposit funds\n",
        "#Return card\n",
        "balance=100"
      ],
      "metadata": {
        "id": "_yE1LsjGip7d"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(\"Menu\")\n",
        "print(\"\\n 1-Display Balance\\n 2-Withdraw Funds\\n 3-Deposit Funds\\n 4-Return Card\\n\")\n",
        "print()\n",
        "choice= int(input(\"Choose an Option\\n\\n\"))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "8HPxpSXapMia",
        "outputId": "8ea62ad4-9ab3-4a49-9d47-c3e2ac99ac1e"
      },
      "execution_count": null,
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Menu\n",
            "\n",
            " 1-Display Balance\n",
            " 2-Withdraw Funds\n",
            " 3-Deposit Funds\n",
            " 4-Return Card\n",
            "\n",
            "\n",
            "Choose an Option\n",
            "\n",
            "2\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Print Balance\n",
        "balance=100:\n",
        "print(\"\\n 1-Balance \\n 9-Go back to main menu \\n 10-Withdraw funds \\n 11-Exit\")\n",
        "  else:\n",
        "  print(\"Go back to main menu\")\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 105
        },
        "id": "OiPEPbVBi_PB",
        "outputId": "d0c742c1-8e23-4e25-d162-43a9a05eb237"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "error",
          "ename": "SyntaxError",
          "evalue": "invalid syntax (<ipython-input-112-3cd6e7b47dd1>, line 2)",
          "traceback": [
            "\u001b[0;36m  File \u001b[0;32m\"<ipython-input-112-3cd6e7b47dd1>\"\u001b[0;36m, line \u001b[0;32m2\u001b[0m\n\u001b[0;31m    balance=100:\u001b[0m\n\u001b[0m               ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "Z-S41Z59tEsH"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "pdLwHJqdL4ic"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Return to main menu or exit"
      ],
      "metadata": {
        "id": "uxF1AZiBjC-W"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#elif withdraw_option == 1:\n",
        "# For predefined amounts\n",
        "#withdraw = 10elif withdraw_option == 2:\n",
        "#withdraw = 20elif withdraw_option == 3:\n",
        "# withdraw = 40elif withdraw_option == 4:\n",
        "#withdraw = 60elif withdraw_option == 5:\n",
        "#withdraw = 80elif withdraw_option == 6:\n",
        "#  withdraw = 100"
      ],
      "metadata": {
        "id": "O6_rjD9W-b66"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "withdrawal_options = {1:10,\n",
        "              2:20,\n",
        "              3:40,\n",
        "              4:60,\n",
        "              5:80,\n",
        "              6:100,\n",
        "              7:\"Other amount\",\n",
        "              8:\"Main Menu\",\n",
        "              9:\"Return Card\"\n",
        "}\n",
        "user_input = int(input(\"Please select a withdrawal option (1-9): \"))\n",
        "withdraw = withdrawal_options.get(user_input)\n",
        "print(\"withdrawal_amount:\", withdraw)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "GWn7K6JRM0Vb",
        "outputId": "954aa3a3-ad00-43dd-83d4-d99b8f7a1559"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Please select a withdrawal option (1-9): 4\n",
            "withdrawal_amount: 60\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "new_balance = balance - withdraw\n",
        "user_input = int(input(\"Please select a withdrawal option (1-9): \"))\n",
        "withdraw = withdrawal_options.get(user_input)\n",
        "print(\"Withdrawal amount:\", withdraw)\n",
        "print(\"your new balance is:\", new_balance)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "BnFcqJjlWlzG",
        "outputId": "cb029cd8-3fa1-4466-8d26-ff9f8af927f4"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Please select a withdrawal option (1-9): 2\n",
            "Withdrawal amount: 20\n",
            "your new balance is: 20\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "new_balance = balance - withdraw\n",
        "if withdraw == withdrawal_options.get(user_input):\n",
        "  print(\"Your new balance is:\")\n",
        "else:\n",
        "    print(withdrawal_options)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "W9At3DHnN3UH",
        "outputId": "852426cc-1cb5-44e4-b78b-2184267aef31"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Your new balance is:\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Withdraw Funds\n",
        "if choice== 2:\n",
        "  print(\"How much would you like to Withdraw\")\n",
        "print()\n",
        "Withdraw= int(input(\"\\n-1=£10     -2=£20\\n-3=£40     -4=£60\\n-5=£80     -6=£100  \\n 7-Other amount \\n 8-Main Menu \\n 9-Return Card \\n\"))\n",
        "print(Withdraw)\n",
        "print(\"Your new balance is\")"
      ],
      "metadata": {
        "id": "ax224aR3jLOf",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "0f1b2e75-8bba-4bfb-f0c2-e2e678da1bd5"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "How much would you like to Withdraw\n",
            "\n",
            "\n",
            "-1=£10     -2=£20\n",
            "-3=£40     -4=£60\n",
            "-5=£80     -6=£100  \n",
            " 7-Other amount \n",
            " 8-Main Menu \n",
            " 9-Return Card \n",
            "4\n",
            "4\n",
            "Your new balance is\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Check for enough funds\n",
        "#int for multiples of 10\n",
        "#1=£10, 2=£20, 3=£40, 4=£60, 5=£80, 6=£100\n",
        "#other amount\n",
        "#Return to Main Menu\n",
        "#Return Card"
      ],
      "metadata": {
        "id": "S0rcXO3IjRkd"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "CJj2515-MLoR"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Show new Balance\n",
        "print(\"your new balance is:\")"
      ],
      "metadata": {
        "id": "pbSspIaijX5-",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "0798f609-661b-4f8c-f0d4-1215d10a893d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "your new balance is:\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Deposit Funds\n",
        "print(\"Your new balance is:\")"
      ],
      "metadata": {
        "id": "qNad-N0pkn0i",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "faf2819b-3140-4af7-ec4a-cd8064431b0f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Your new balance is:\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "vZg7I7fXk3hS"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Add Desosit amount and Show new balance"
      ],
      "metadata": {
        "id": "B29sm79Qkv1C"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#only show in multiples of 10"
      ],
      "metadata": {
        "id": "kK1nqdwJk4WG"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Return to main menu or Exit"
      ],
      "metadata": {
        "id": "6-mAETT2lBRM"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Return Card or Exit"
      ],
      "metadata": {
        "id": "oCI9YiAjlGhK"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Thank you Good Bye"
      ],
      "metadata": {
        "id": "p0tgjjR6lN9v"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}